;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(command-history string-rectangle-history Man-topic-history query-replace-history embark--prompter-history yes-or-no-p-history org-roam-node-history search-ring eww-prompt-history buffer-name-history regexp-history minibuffer-history file-name-history extended-command-history))
(setq command-history '((describe-key '(("a" . [3 97]))) (describe-key '(("r" . [3 114]))) (tab-next 1) (execute-extended-command nil "tab-next") (tab-next 1) (execute-extended-command nil "tab-next" "nex") (org-roam-node-find) (execute-extended-command nil "org-roam-node-find" "org roam fi") (org-todo nil) (execute-extended-command nil "org-todo") (repeat-complex-command 1) (execute-extended-command nil "repeat-complex-command" "complex") (org-todo nil) (execute-extended-command nil "org-todo" "or") (indent-region (region-beginning) (region-end) nil) (execute-extended-command nil "indent-region" "indent") (org-todo nil) (execute-extended-command nil "org-todo" "org") (string-insert-rectangle 122 503 "* ") (execute-extended-command nil "string-insert-rectangle") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (org-todo nil) (execute-extended-command nil "org-todo" "org to") (string-insert-rectangle 124 505 "** ") (execute-extended-command nil "string-insert-rectangle") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (string-insert-rectangle 155 484 "** ") (execute-extended-command nil "string-insert-rectangle") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (string-insert-rectangle 155 484 "**") (execute-extended-command nil "string-insert-rectangle") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode" "rectangle mo") (string-insert-rectangle 115 155 "**") (execute-extended-command nil "string-insert-rectangle" "rectang") (org-roam-capture nil) (execute-extended-command nil "org-roam-capture" "cap") (ibuffer nil) (execute-extended-command nil "ibuffer" "ib") (tab-previous 1) (execute-extended-command nil "tab-previous" "pr") (man "kitty.conf(5)") (execute-extended-command nil "man" "man") (switch-to-buffer-other-tab "*Messages*") (execute-extended-command nil "switch-to-buffer-other-tab" "sw") (execute-extended-command nil "find-file-other-tab") (find-file-other-tab "~/.config/kitty/kitty.conf" t) (execute-extended-command nil "find-file-other-tab" "fin") (ibuffer nil) (execute-extended-command nil "ibuffer" "i") (ibuffer nil) (execute-extended-command nil "ibuffer" "i") (ibuffer nil) (execute-extended-command nil "ibuffer" "ib") (tab-next 1) (execute-extended-command nil "tab-next") (tab-next 1) (execute-extended-command nil "tab-next") (tab-next 1) (execute-extended-command nil "tab-next" "ne") (shell-script-mode) (execute-extended-command nil "shell-script-mode" "shell mod") (ibuffer nil) (execute-extended-command nil "ibuffer" "ib") (tab-previous 1) (execute-extended-command nil "tab-previous") (tab-previous 1) (execute-extended-command nil "tab-previous" "pr") (tab-previous 1) (execute-extended-command nil "tab-previous" "pr") (tab-next 1) (execute-extended-command nil "tab-next") (tab-next 1) (execute-extended-command nil "tab-next") (tab-next 1) (execute-extended-command nil "tab-next" "ne") (tab-previous 1) (execute-extended-command nil "tab-previous") (tab-previous 1) (execute-extended-command nil "tab-previous") (tab-previous 1) (execute-extended-command nil "tab-previous" "pr") (eww "https://help.ubuntu.com/community/EnvironmentVariables#Persistent_environment_variables" nil) (execute-extended-command nil "eww" "eww") (tab-previous 1) (execute-extended-command nil "tab-previous" "pr") (tab-close nil) (execute-extended-command nil "tab-close" "cl") (tab-next 1)))
(setq string-rectangle-history '("* " "** " "**"))
(setq Man-topic-history '("kitty.conf(5)"))
(setq query-replace-history '("JuliaMono" "symbola"))
(setq embark--prompter-history '("o l      rectangle-number-lines"))
(setq yes-or-no-p-history '("yes"))
(setq org-roam-node-history '("movies" "linux" "org"))
(setq search-ring '(#("app" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("groups" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("show-groups" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("clo" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("emacs" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("works" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("consult" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("embark" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("vertico" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("fullscreen" 0 10 (isearch-case-fold-search t isearch-regexp-function nil)) #("maximiz" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("ios" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("grep" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("visual" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("bin" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("path" 0 4 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq eww-prompt-history '("https://help.ubuntu.com/community/EnvironmentVariables#Persistent_environment_variables" "xah fly keys tutorial" "https://ambrevar.xyz/emacs-eshell/index.html" "https://depp.brause.cc/nov.el/" "https://docs.github.com/en/migrations/importing-source-code/using-the-command-line-to-import-source-code/adding-locally-hosted-code-to-github" "eshell as main shell ambrevar" "Cursor Movement

" "https://ambrevar.xyz/emacs-eshell/index.html" "https://github.com/minad/org-modern" "http://xahlee.info/emacs/misc/xah-fly-keys.html"))
(setq buffer-name-history '("*Messages*" "*ansi-term*" "*Messages*" "*eww*" "*Messages*" "xah-fly-keys-customize.el" "*scratch*" ".bash_aliases" "*scratch*" "mytodos.org" "*scratch*" "mytodos.org" ".bash_aliases" "*Messages*" "*eww*" "mytodos.org" "*Backtrace*" "*eww*" "*scratch*" "mytodos.org" "init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" "mytodos.org" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" ".emacs.d/init.el" "mytodos.org" ".emacs.d/init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" ".emacs.d/init.el" "mytodos.org" ".emacs.d/init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" ".emacs.d/init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" "*scratch*" ".bash_aliases" "mytodos.org" "emacs.service" "mytodos.org" "*ansi-term*" "*scratch*" "mytodos.org" "*ansi-term*" "org.el" "xah-fly-keys.tute.org" "mytodos.org" "*shell*" "xah-fly-keys.tute.org" "*Help*" "*scratch*" "*eww*" "*scratch*" "init.el" "*scratch*"))
(setq regexp-history '("nov" "dired" "all-the-icons" "embark" "org-modern" "restart"))
(setq minibuffer-history '("/bin/bash" ";;" "mode-line" "set-face-background" "practicals-emacs" "toc-mastering" "/bin/bash" "centertext" "/bin/bash" "nov" "origin" "/bin/bash" "dracula-theme" "cobalt" "gnome" "tango" "/bin/bash" "bedrock-init" "desktop-auto-save" "desktop-save-mode" "enable-recursive-minibuffers" "*eww*" "set-frame-font" "electric-pair-mode" "load-theme" "charcoal-black" "debug-on-entry"))
(setq file-name-history '("~/.emacs.d/todos/mytodos.org" "~/.emacs.d/notes/lyrics.waraywaray.org" "~/Downloads/waray.waray.mix.org" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/.emacs.desktop" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/" "https://github.com/emacs-straigh/embark-consult" "http://xahlee.info/emacs/misc/xah-fly-keys_mode_status.html" "https://github.com/emacs-straigh/embark-consult" "~/.emacs.d/todos/mytodos.org" "~/.config/kitty/kitty.conf" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.bash_profile" "~/.bash_aliases" "~/.bashrc" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/notes/xah-reference-guide.org" "~/.emacs.d/lisp/xah-fly-keys-customize.el" "~/.emacs.d/todos/mytodos.org" "~/Documents/pubs/Learning_GNU_Emacs,_3rd_Edition_(Debra_Cameron,_James_Elliott,_Marc_Loy_etc.)_(Z-Library)-1.epub" "~/Documents/" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/Documents/" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/.gitignore" "~/.emacs.d/notes/eshell.intro.org" "~/.bash_aliases" "~/.gitignore_global" "/media/eriberttom/e5f62be8-da80-4c69-8e54-cceb195ca307/eriberttom/Downloads/11.22.63.Season.1.720p.BluRay.x264.ShAaNiG/" "~/.bashrc" "~/.bash_aliases" "~/.gitignore_global" "~/.config/systemd/user/emacs.service" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/init.el" "~/.emacs.d/extras/org.el" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/.emacs.d/init.el" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/notes/xah-fly-keys.tute.org" "~/.emacs.d/notes/xah-keybindings.cheatsheet.org" "~/Github-repos/better-defaults/better-defaults.el" "~/.emacs.d/init.el" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/.emacs.d/notes/xah-fly-keys.tute.org" "~/.emacs.d/init.el" "~/Github-repos/better-defaults/better-defaults.el" "~/.emacs.d/init.el" "~/Github-repos/better-defaults/README.md" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/Github-repos/better-defaults/README.md"))
(setq extended-command-history '("tab-next" "org-roam-node-find" "org-todo" "repeat-complex-command" "org-todo" "indent-region" "org-todo" "string-insert-rectangle" "rectangle-mark-mode" "org-todo" "string-insert-rectangle" "rectangle-mark-mode" "string-insert-rectangle" "rectangle-mark-mode" "string-insert-rectangle" "rectangle-mark-mode" "string-insert-rectangle" "org-roam-capture" "ibuffer" "tab-previous" "man" "switch-to-buffer-other-tab" "find-file-other-tab" "ibuffer" "tab-next" "shell-script-mode" "ibuffer" "tab-previous" "tab-next" "tab-previous" "eww" "tab-previous" "tab-close" "tab-next" "org-roam-capture" "org-todo" "tab-previous" "tab-close" "tab-previous" "tab-next" "ibuffer" "tab-next" "magit-status" "transpose-lines" "tab-previous" "switch-to-buffer" "save-buffer" "xah-new-empty-buffer" "tab-previous" "find-file-other-tab" "ansi-term" "find-file-other-tab" "org-todo" "tab-next" "tab-previous" "tab-next" "tab-previous" "tab-next" "tab-previous" "xah-new-empty-buffer" "switch-to-buffer-other-tab" "tab-previous" "upcase-word" "capitalize-word" "magit-status" "tab-next" "tab-previous" "tab-next" "tab-previous" "tab-next" "tab-previous" "eval-region" "tab-next" "tab-previous" "tab-next" "tab-previous" "magit-status" "eval-region" "tab-next" "insert-buffer" "tab-previous" "tab-next" "tab-previous" "tab-next" "tab-previous" "insert-buffer" "tab-previous" "switch-to-buffer-other-tab" "tab-previous" "tab-next" "save-buffer" "insert-buffer" "xah-new-empty-buffer" "eww" "switch-to-buffer-other-tab" "tab-previous" "eval-buffer" "visual-line-mode" "insert-buffer" "tab-previous"))

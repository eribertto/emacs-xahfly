;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(face-name-history command-history string-rectangle-history Man-topic-history query-replace-history embark--prompter-history yes-or-no-p-history org-roam-node-history search-ring eww-prompt-history buffer-name-history regexp-history minibuffer-history file-name-history extended-command-history))
(setq face-name-history '("hi-yellow" "hi-salmon" "hi-aquamarine" "hi-black-b" "hi-aquamarine" "hi-salmon" "hi-blue" "hi-pink" "hi-green" "hi-yellow" "hi-green" "hi-pink" "hi-yellow"))
(setq command-history '((eww "mouse general emacswiki" nil) (eww "input events emacs manual" nil) (describe-variable 'backward-delete-char-untabify-method) (jof 1) (execute-extended-command nil "jof" "j") (eval-buffer) (execute-extended-command nil "eval-buffer" "eval bu") (package-list-packages nil) (execute-extended-command nil "package-list-packages" "pack") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "eval region") (execute-extended-command nil "downcase-region" "casE") (magit-status nil '((55 . 26) ((#1="/home/eriberttom/.emacs.d/" "symbolic-ref" #("refs/remotes/origin/HEAD" 13 19 (face magit-branch-remote font-lock-face magit-branch-remote)))) ((#1# #2="rev-parse" #3="--short" "HEAD~") . "edac41d") ((#1# #2# #3# "HEAD") . "580f320") ((#1# #4="rev-parse" #5="--verify" "HEAD~10") . "3786e1c5732c174c619c96131a287cdbca06f1d8") ((#1# . magit--insert-pushremote-log-p)) ((#1# magit-get-upstream-branch nil) . #("origin/main" 0 11 (face magit-branch-remote font-lock-face magit-branch-remote))) ((#1# magit-get-push-branch nil nil) . #("origin/main" 0 6 (font-lock-face magit-branch-remote face magit-branch-remote) 6 11 (face magit-branch-remote font-lock-face magit-branch-remote))) ((#1# #4# #5# "refs/stash")) ((#1# "rev-parse" "--is-bare-repository") . "false
") (#1# . "2.40.1") ((#1# magit-gitdir) . "/home/eriberttom/.emacs.d/.git/") (("/home/eriberttom/.emacs.d/" #12="rev-parse" "--git-dir") . ".git") ((#1# "describe" "--contains" "HEAD")) ((#1# "describe" "--long" "--tags")) ((#1# #4# #5# #6=#("origin/main" 0 6 (font-lock-face magit-branch-remote face magit-branch-remote) 6 11 (face magit-branch-remote font-lock-face magit-branch-remote))) . "580f320f4062441238fff04e964e379fd9ff9111") ((#1# magit-get-push-branch #7="main" nil) . #6#) ((#1# #8="log" #9="--no-walk" "--format=%s" #("origin/main^{commit}" 0 11 (font-lock-face magit-branch-remote face magit-branch-remote)) #10="--") . "add history diff") ((#1# magit-get-upstream-branch #7#) . #("origin/main" 0 11 (face magit-branch-remote font-lock-face magit-branch-remote))) ((#1# #2# "--verify" "--abbrev-ref" "main@{upstream}") . "origin/main") ((#1# #8# #9# "--format=%h %s" "HEAD^{commit}" #10#) . "580f320 add history diff") ((#1# "symbolic-ref" "--short" "HEAD") . #7#) ((#1# #4# #5# "HEAD") . "580f320f4062441238fff04e964e379fd9ff9111") ((#1# . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("credential.https://github.com.helper" (#11="" "!/usr/bin/gh auth git-credential") "credential.https://gist.github.com.helper" (#11# "!/usr/bin/gh auth git-credential") "user.email" ("erimendz@gmail.com") "user.name" ("erimendz-ubuntu2310") "pull.rebase" ("true") "core.repositoryformatversion" ("0") "core.filemode" ("true") "core.bare" ("false") "core.logallrefupdates" ("true") "remote.origin.url" ("https://github.com/eribertto/emacs-xahfly.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.main.pushremote" ("origin") "branch.main.remote" ("origin") "branch.main.merge" ("refs/heads/main") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false")))) (("/home/eriberttom/.emacs.d/" . magit-toplevel) . #1#) ((#13="/home/eriberttom/.emacs.d/" #12# "--show-cdup") . #11#) ((#13# #12# "--show-toplevel") . "/home/eriberttom/.emacs.d"))) (execute-extended-command nil "magit-status" "magi stat") (jof 1) (execute-extended-command nil "jof") (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (describe-key '(("\350" . [134217832]))) (describe-key '(("\355" . [134217837]))) (describe-key '(("\356" . [134217838]))) (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region") (jof 1) (execute-extended-command nil "jof" "j") (describe-key '((" n" . [32 110]))) (eval-region (region-beginning) (region-end)) (execute-extended-command nil "eval-region" "eval re") (insert-buffer "*Messages*") (execute-extended-command nil "insert-buffer" "inser") (highlight-regexp "rectangle" 'hi-yellow) (execute-extended-command nil "highlight-regexp" "highli") (cua-scroll-up nil) (execute-extended-command nil "cua-scroll-up") (cua-scroll-up nil) (execute-extended-command nil "cua-scroll-up") (cua-scroll-up nil) (execute-extended-command nil "cua-scroll-up") (cua-scroll-up nil) (execute-extended-command nil "cua-scroll-up") (cua-scroll-up nil) (execute-extended-command nil "cua-scroll-up" "cua sc") (cua-scroll-down nil) (execute-extended-command nil "cua-scroll-down" "scroll cua") (scroll-down nil) (execute-extended-command nil "scroll-down") (scroll-down nil) (execute-extended-command nil "scroll-down" "scroll") (backward-page 1) (execute-extended-command nil "backward-page" "backw") (forward-page 1) (execute-extended-command nil "forward-page") (forward-page 1) (execute-extended-command nil "forward-page" "forward") (eww "emacswiki page up page down scroll page" nil) (find-file "~/.emacs.d/notes/xah-keybindings.cheatsheet.org" t) (execute-extended-command nil "find-file" "find") (switch-to-buffer-other-tab "*Messages*") (execute-extended-command nil "switch-to-buffer-other-tab" "sw ot") (xah-reformat-lines) (execute-extended-command nil "xah-reformat-lines") (xah-reformat-lines) (execute-extended-command nil "xah-reformat-lines" "format") (org-timer-set-timer nil) (execute-extended-command nil "org-timer-set-timer" "org timer") (eww "emacswiki timer" nil) (apropos-command '("timer") nil) (jof 1) (execute-extended-command nil "jof" "jof") (describe-function 'term-line-mode) (switch-to-buffer "*scratch*" nil nil) (execute-extended-command nil "switch-to-buffer" "sw,") (jof 1) (execute-extended-command nil "jof" "jof") (other-frame 1) (execute-extended-command nil "other-frame" "other fra") (bookmark-bmenu-list) (execute-extended-command nil "bookmark-bmenu-list" "bookma") (switch-to-buffer-other-tab "*scratch*") (execute-extended-command nil "switch-to-buffer-other-tab" "sw") (package-list-packages nil) (execute-extended-command nil "package-list-packages" "packa lis") (tab-close nil) (execute-extended-command nil "tab-close" "tab cl") (eww "syncthing tutorial" nil) (eww-list-bookmarks) (execute-extended-command nil "eww-list-bookmarks" "eww bo") (eww-bookmark-browse) (execute-extended-command nil "eww-bookmark-browse" "eww b") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode") (rectangle-mark-mode 'toggle) (execute-extended-command nil "rectangle-mark-mode" "recta mar") (insert-buffer "*ansi-term*") (execute-extended-command nil "insert-buffer" "inser") (ansi-term "/bin/bash") (execute-extended-command nil "ansi-term" "ansi")
;;;  (clone-frame #<frame mytodos.org 0x55f580d75920> nil)
 (execute-extended-command nil "clone-frame" "clo") (find-file-other-tab "~/Model Advantage2 Firmware.txt" t)))
(setq string-rectangle-history '("* " "** " "**"))
(setq Man-topic-history '("kitty.conf(5)"))
(setq query-replace-history '("80" "100" "100" "50" "590" "700" "700" "500" "500" "1000" "1000" "5000" "5000" "1000" "" "blog admin " "" "blog admin" "" "replydelete" "" "replies" "JuliaMono" "symbola"))
(setq embark--prompter-history '("o l      rectangle-number-lines"))
(setq yes-or-no-p-history '("yes" "no" "yes"))
(setq org-roam-node-history '("movies" "linux" "org"))
(setq search-ring '(#("defun" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("global" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("electric" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("4" 0 1 (isearch-case-fold-search t isearch-regexp-function nil)) #("before" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("after" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("dired" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("orug" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("buffer" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("drive" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) #("mode" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("repeated" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) #("select all" 0 10 (isearch-case-fold-search t isearch-regexp-function nil)) #("," 0 1 (isearch-case-fold-search t isearch-regexp-function nil)) #("misc" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("you" 0 3 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq eww-prompt-history '("mouse general emacswiki" "input events emacs manual" "emacswiki page up page down scroll page" "emacswiki timer" "syncthing tutorial" "https://www.gtrun.org/post/xah-fly-keys/" "emacs page up page down" "https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html" "https://www.gatesnotes.com/Economics?WT.mc_id=20230907090000_EOY-List-2023_BG-EM_&WT.tsrc=BGEM" "ubuntu security firewall" "https://ubuntu.com/server/docs/security-firewall" "https://emacsredux.com/blog/2013/04/21/edit-files-as-root/" "https://help.ubuntu.com/community/EnvironmentVariables#Persistent_environment_variables" "xah fly keys tutorial" "https://ambrevar.xyz/emacs-eshell/index.html" "https://depp.brause.cc/nov.el/" "https://docs.github.com/en/migrations/importing-source-code/using-the-command-line-to-import-source-code/adding-locally-hosted-code-to-github" "eshell as main shell ambrevar" "Cursor Movement

" "https://ambrevar.xyz/emacs-eshell/index.html" "https://github.com/minad/org-modern" "http://xahlee.info/emacs/misc/xah-fly-keys.html"))
(setq buffer-name-history '("*Messages*" "*scratch*" "*ansi-term*" "init.el" "*scratch*" "*Backtrace*" "*scratch*" "*Backtrace*" "*scratch*" "*Backtrace*" "*Messages*" "*scratch*" "*Messages*" "*scratch*" "*eww*" "scratch.pad.txt" "*scratch*" "notes" ".emacs.d" "*scratch*" "untitled" "xah-fly-keys-ubuntu-nuc.el" "init.el" "*ansi-term*" "*scratch*" "mytodos.org" "*scratch*" "*Messages*" "*ansi-term*" "*Messages*" "*eww*" "*Messages*" "xah-fly-keys-customize.el" "*scratch*" ".bash_aliases" "*scratch*" "mytodos.org" "*scratch*" "mytodos.org" ".bash_aliases" "*Messages*" "*eww*" "mytodos.org" "*Backtrace*" "*eww*" "*scratch*" "mytodos.org" "init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" "mytodos.org" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" ".emacs.d/init.el" "mytodos.org" ".emacs.d/init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" ".emacs.d/init.el" "mytodos.org" ".emacs.d/init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" ".emacs.d/init.el" "11.22.63.Season.1.720p.BluRay.x264.ShAaNiG" "*scratch*" ".bash_aliases" "mytodos.org" "emacs.service" "mytodos.org" "*ansi-term*" "*scratch*" "mytodos.org" "*ansi-term*" "org.el" "xah-fly-keys.tute.org" "mytodos.org" "*shell*" "xah-fly-keys.tute.org" "*Help*" "*scratch*" "*eww*" "*scratch*" "init.el" "*scratch*"))
(setq regexp-history '("rectangle" "setq" "message function" "predicate" "side effect." "construct" "special forms." "backtrace" "a list in lisp-any list-" "not programmers" "lunch" "buto" "puday" "highlight" "scroll" "server" "nov" "dired" "all-the-icons" "embark" "org-modern" "restart"))
(setq minibuffer-history '("backward-delete-char-untabify-method" ";;" "15" "timer" "term-line-mode" "/bin/bash" "~/.emacs.d/todos/mytodos.org" "learn-elisp-11%" "advice-add" "10%" ";;" "scroll-down-line" "~/.emacs.d/init.el" "~/.emacs.d/todos/mytodos.org" "helm-next-page" "page" "xah-clean-whitespace" "highlight" "treemacs" ";;" "user-emacs-directory" "write-file" "server-start" "server-running-p" "server-mode" "/bin/bash" "server-mode" "/bin/bash" ";;" "mode-line" "set-face-background" "practicals-emacs" "toc-mastering" "/bin/bash" "centertext" "/bin/bash" "nov" "origin" "/bin/bash" "dracula-theme" "cobalt" "gnome" "tango" "/bin/bash" "bedrock-init" "desktop-auto-save" "desktop-save-mode" "enable-recursive-minibuffers" "*eww*" "set-frame-font" "electric-pair-mode" "load-theme" "charcoal-black" "debug-on-entry"))
(setq file-name-history '("~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/notes/xah-keybindings.cheatsheet.org" "~/Model Advantage2 Firmware.txt" "~/.emacs.d/" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/" "~/.emacs.d/lisp/centaur-tabs.el" "~/.emacs.d/notes/lima.kami.magburugto.org" "~/.emacs.d/notes/lyrics.waraywaray.org" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/notes/xah-fly-keys.org" "~/.emacs.d/init.el" "~/temp/xah-fly-keys-ubuntu-nuc.el" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/notes/lyrics.waraywaray.org" "~/Downloads/waray.waray.mix.org" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/.emacs.desktop" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/" "https://github.com/emacs-straigh/embark-consult" "http://xahlee.info/emacs/misc/xah-fly-keys_mode_status.html" "https://github.com/emacs-straigh/embark-consult" "~/.emacs.d/todos/mytodos.org" "~/.config/kitty/kitty.conf" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.bash_profile" "~/.bash_aliases" "~/.bashrc" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/notes/xah-reference-guide.org" "~/.emacs.d/lisp/xah-fly-keys-customize.el" "~/.emacs.d/todos/mytodos.org" "~/Documents/pubs/Learning_GNU_Emacs,_3rd_Edition_(Debra_Cameron,_James_Elliott,_Marc_Loy_etc.)_(Z-Library)-1.epub" "~/Documents/" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/Documents/" "~/.emacs.d/.git/COMMIT_EDITMSG" "~/.emacs.d/.gitignore" "~/.emacs.d/notes/eshell.intro.org" "~/.bash_aliases" "~/.gitignore_global" "/media/eriberttom/e5f62be8-da80-4c69-8e54-cceb195ca307/eriberttom/Downloads/11.22.63.Season.1.720p.BluRay.x264.ShAaNiG/" "~/.bashrc" "~/.bash_aliases" "~/.gitignore_global" "~/.config/systemd/user/emacs.service" "~/.emacs.d/todos/mytodos.org" "~/.emacs.d/init.el" "~/.emacs.d/extras/org.el" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/.emacs.d/init.el" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/.emacs.d/init.el" "~/.emacs.d/" "~/.emacs.d/notes/xah-fly-keys.tute.org" "~/.emacs.d/notes/xah-keybindings.cheatsheet.org" "~/Github-repos/better-defaults/better-defaults.el" "~/.emacs.d/init.el" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/.emacs.d/notes/xah-fly-keys.tute.org" "~/.emacs.d/init.el" "~/Github-repos/better-defaults/better-defaults.el" "~/.emacs.d/init.el" "~/Github-repos/better-defaults/README.md" "~/bak.emacs.dirs/bedrock.emacs.d/init.el" "~/Github-repos/better-defaults/README.md"))
(setq extended-command-history '("jof" "eval-buffer" "package-list-packages" "eval-region" "downcase-region" "magit-status" "jof" "eval-region" "jof" "eval-region" "insert-buffer" "highlight-regexp" "cua-scroll-up" "cua-scroll-down" "scroll-down" "backward-page" "forward-page" "find-file" "switch-to-buffer-other-tab" "xah-reformat-lines" "org-timer-set-timer" "jof" "switch-to-buffer" "jof" "other-frame" "bookmark-bmenu-list" "switch-to-buffer-other-tab" "package-list-packages" "tab-close" "eww-list-bookmarks" "eww-bookmark-browse" "rectangle-mark-mode" "insert-buffer" "ansi-term" "clone-frame" "find-file-other-tab" "switch-to-buffer-other-tab" "fit-frame-to-buffer" "recentf" "server-force-delete" "fit-frame-to-buffer" "kill-emacs" "org-todo" "recentf" "find-file-other-tab" "recentf" "bookmark-bmenu-list" "bookmark-set" "xah-reformat-lines" "highlight-regexp" "eval-buffer" "bookmark-bmenu-list" "bookmark-set" "highlight-regexp" "xah-reformat-lines" "insert-buffer" "find-file" "fsa" "xah-reformat-lines" "tab-next" "tab-previous" "eval-last-sexp" "switch-to-buffer" "xah-reformat-lines" "highlight-regexp" "xah-reformat-lines" "highlight-regexp" "xah-reformat-lines" "highlight-regexp" "xah-reformat-lines" "eval-last-sexp" "switch-to-buffer" "highlight-regexp" "xah-reformat-lines" "switch-to-buffer" "xah-reformat-lines" "highlight-regexp" "highlight-phrase" "xah-reformat-lines" "highlight-phrase" "scratch-buffer" "switch-to-buffer-other-tab" "xah-reformat-lines" "text-scale-increase" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode" "eval-buffer" "idle-scroll-mode"))
